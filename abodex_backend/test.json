{
  "info": {
    "name": "AbodeX API Tests",
    "description": "Comprehensive test collection for AbodeX backend API",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000/api",
      "type": "string"
    },
    {
      "key": "guestToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "hostToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "adminToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "userId",
      "value": "",
      "type": "string"
    },
    {
      "key": "hostId",
      "value": "",
      "type": "string"
    },
    {
      "key": "propertyId",
      "value": "",
      "type": "string"
    },
    {
      "key": "bookingId",
      "value": "",
      "type": "string"
    },
    {
      "key": "reviewId",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Register Guest",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Response has token and user data\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.token).to.be.a('string');",
                  "    pm.expect(jsonData.user).to.be.an('object');",
                  "    pm.expect(jsonData.user.email).to.eql(pm.iterationData.get(\"email\"));",
                  "});",
                  "",
                  "// Set environment variable for guest token",
                  "var jsonData = pm.response.json();",
                  "pm.collectionVariables.set(\"guestToken\", jsonData.token);",
                  "pm.collectionVariables.set(\"userId\", jsonData.user.id);"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"{{$randomEmail}}\",\n    \"password\": \"password123\",\n    \"firstName\": \"{{$randomFirstName}}\",\n    \"lastName\": \"{{$randomLastName}}\",\n    \"phone\": \"{{$randomPhoneNumber}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "register"]
            }
          },
          "response": []
        },
        {
          "name": "Login Guest",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has token\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.token).to.be.a('string');",
                  "});",
                  "",
                  "// Set environment variable for guest token",
                  "var jsonData = pm.response.json();",
                  "pm.collectionVariables.set(\"guestToken\", jsonData.token);",
                  "pm.collectionVariables.set(\"userId\", jsonData.user.id);"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"guest@example.com\",\n    \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "login"]
            }
          },
          "response": []
        },
        {
          "name": "Become a Host",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Host application submitted\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.message).to.include('submitted successfully');",
                  "    pm.expect(jsonData.host).to.be.an('object');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": "In actual usage, this would be multipart/form-data for file uploads"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{guestToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"governmentIdType\": \"passport\",\n    \"governmentIdNumber\": \"{{$randomUUID}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/become-host",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "become-host"]
            }
          },
          "response": []
        },
        {
          "name": "Get Current User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has user data\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.user).to.be.an('object');",
                  "    pm.expect(jsonData.user.email).to.be.a('string');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{guestToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/auth/me",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "me"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Guest Features",
      "item": [
        {
          "name": "Search Properties",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has properties array\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.properties).to.be.an('array');",
                  "    pm.expect(jsonData.total).to.be.a('number');",
                  "});",
                  "",
                  "// Store first property ID for later use",
                  "var jsonData = pm.response.json();",
                  "if (jsonData.properties && jsonData.properties.length > 0) {",
                  "    pm.collectionVariables.set(\"propertyId\", jsonData.properties[0]._id);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/guest/properties?location=New York&minPrice=50&maxPrice=200&guests=2",
              "host": ["{{baseUrl}}"],
              "path": ["guest", "properties"],
              "query": [
                {
                  "key": "location",
                  "value": "New York"
                },
                {
                  "key": "minPrice",
                  "value": "50"
                },
                {
                  "key": "maxPrice",
                  "value": "200"
                },
                {
                  "key": "guests",
                  "value": "2"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get Property Details",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has property details\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData._id).to.eql(pm.collectionVariables.get(\"propertyId\"));",
                  "    pm.expect(jsonData.title).to.be.a('string');",
                  "    pm.expect(jsonData.description).to.be.a('string');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/guest/properties/{{propertyId}}",
              "host": ["{{baseUrl}}"],
              "path": ["guest", "properties", "{{propertyId}}"]
            }
          },
          "response": []
        },
        {
          "name": "Create Booking",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has booking and client secret\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.booking).to.be.an('object');",
                  "    pm.expect(jsonData.clientSecret).to.be.a('string');",
                  "});",
                  "",
                  "// Store booking ID for later use",
                  "var jsonData = pm.response.json();",
                  "pm.collectionVariables.set(\"bookingId\", jsonData.booking._id);"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{guestToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"propertyId\": \"{{propertyId}}\",\n    \"checkIn\": \"{{$localDatetime 'YYYY-MM-DD' 2}}\",\n    \"checkOut\": \"{{$localDatetime 'YYYY-MM-DD' 5}}\",\n    \"guestsCount\": 2,\n    \"specialRequests\": \"Early check-in if possible\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/guest/bookings",
              "host": ["{{baseUrl}}"],
              "path": ["guest", "bookings"]
            }
          },
          "response": []
        },
        {
          "name": "Confirm Booking Payment",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Booking is confirmed\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.message).to.include('confirmed successfully');",
                  "    pm.expect(jsonData.booking.status).to.eql('confirmed');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{guestToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{}"
            },
            "url": {
              "raw": "{{baseUrl}}/guest/bookings/{{bookingId}}/confirm",
              "host": ["{{baseUrl}}"],
              "path": ["guest", "bookings", "{{bookingId}}", "confirm"]
            }
          },
          "response": []
        },
        {
          "name": "Add Review",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Review is created\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.rating).to.be.at.least(1).and.at.most(5);",
                  "    pm.expect(jsonData.comment).to.be.a('string');",
                  "});",
                  "",
                  "// Store review ID for later use",
                  "var jsonData = pm.response.json();",
                  "pm.collectionVariables.set(\"reviewId\", jsonData._id);"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{guestToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"bookingId\": \"{{bookingId}}\",\n    \"propertyId\": \"{{propertyId}}\",\n    \"rating\": 5,\n    \"comment\": \"Great stay! The property was clean and exactly as described. Host was very responsive.\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/guest/reviews",
              "host": ["{{baseUrl}}"],
              "path": ["guest", "reviews"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Host Features",
      "item": [
        {
          "name": "Login as Host",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has token\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.token).to.be.a('string');",
                  "    pm.expect(jsonData.user.role).to.eql('host');",
                  "});",
                  "",
                  "// Set environment variable for host token",
                  "var jsonData = pm.response.json();",
                  "pm.collectionVariables.set(\"hostToken\", jsonData.token);"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"host@example.com\",\n    \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "login"]
            }
          },
          "response": []
        },
        {
          "name": "Get Host Dashboard",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has dashboard data\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.host).to.be.an('object');",
                  "    pm.expect(jsonData.properties).to.be.a('number');",
                  "    pm.expect(jsonData.bookings).to.be.a('number');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{hostToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/host/dashboard",
              "host": ["{{baseUrl}}"],
              "path": ["host", "dashboard"]
            }
          },
          "response": []
        },
        {
          "name": "Create Property",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Property is created\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.title).to.be.a('string');",
                  "    pm.expect(jsonData.description).to.be.a('string');",
                  "});",
                  "",
                  "// Store property ID for later use",
                  "var jsonData = pm.response.json();",
                  "pm.collectionVariables.set(\"propertyId\", jsonData._id);"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "description": "In actual usage, this would be multipart/form-data for file uploads"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{hostToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"title\": \"Beautiful Apartment in Downtown\",\n    \"description\": \"Spacious and modern apartment in the heart of the city with great amenities.\",\n    \"type\": \"apartment\",\n    \"address\": {\n        \"street\": \"123 Main St\",\n        \"city\": \"New York\",\n        \"state\": \"NY\",\n        \"country\": \"USA\",\n        \"zipCode\": \"10001\",\n        \"coordinates\": {\n            \"lng\": -74.006,\n            \"lat\": 40.7128\n        }\n    },\n    \"amenities\": [\"wifi\", \"kitchen\", \"tv\", \"air conditioning\"],\n    \"pricePerNight\": 150,\n    \"maxGuests\": 4,\n    \"bedrooms\": 2,\n    \"bathrooms\": 1,\n    \"availability\": [\n        {\n            \"startDate\": \"{{$localDatetime 'YYYY-MM-DD'}}\",\n            \"endDate\": \"{{$localDatetime 'YYYY-MM-DD' 30}}\",\n            \"isAvailable\": true\n        }\n    ],\n    \"discounts\": [\n        {\n            \"name\": \"Weekly Discount\",\n            \"description\": \"10% off for stays of 7 nights or more\",\n            \"discountType\": \"percentage\",\n            \"value\": 10,\n            \"minNights\": 7,\n            \"validFrom\": \"{{$localDatetime 'YYYY-MM-DD'}}\",\n            \"validUntil\": \"{{$localDatetime 'YYYY-MM-DD' 90}}\"\n        }\n    ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/host/properties",
              "host": ["{{baseUrl}}"],
              "path": ["host", "properties"]
            }
          },
          "response": []
        },
        {
          "name": "Get Host Properties",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has properties array\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.be.an('array');",
                  "    pm.expect(jsonData.length).to.be.at.least(1);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{hostToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/host/properties",
              "host": ["{{baseUrl}}"],
              "path": ["host", "properties"]
            }
          },
          "response": []
        },
        {
          "name": "Update Property",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Property is updated\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.pricePerNight).to.eql(160);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{hostToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"pricePerNight\": 160\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/host/properties/{{propertyId}}",
              "host": ["{{baseUrl}}"],
              "path": ["host", "properties", "{{propertyId}}"]
            }
          },
          "response": []
        },
        {
          "name": "Get Host Bookings",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has bookings array\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.be.an('array');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{hostToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/host/bookings",
              "host": ["{{baseUrl}}"],
              "path": ["host", "bookings"]
            }
          },
          "response": []
        },
        {
          "name": "Reply to Review",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Review reply is added\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.hostReply).to.include('Thank you');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{hostToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"reply\": \"Thank you for your kind words! We're glad you enjoyed your stay and hope to host you again soon.\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/host/reviews/{{reviewId}}/reply",
              "host": ["{{baseUrl}}"],
              "path": ["host", "reviews", "{{reviewId}}", "reply"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Admin Features",
      "item": [
        {
          "name": "Login as Admin",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has admin token\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.token).to.be.a('string');",
                  "    pm.expect(jsonData.user.role).to.eql('admin');",
                  "});",
                  "",
                  "// Set environment variable for admin token",
                  "var jsonData = pm.response.json();",
                  "pm.collectionVariables.set(\"adminToken\", jsonData.token);"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"admin@abodex.com\",\n    \"password\": \"adminpassword\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "login"]
            }
          },
          "response": []
        },
        {
          "name": "Get Admin Dashboard",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has dashboard stats\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.totalUsers).to.be.a('number');",
                  "    pm.expect(jsonData.totalHosts).to.be.a('number');",
                  "    pm.expect(jsonData.totalProperties).to.be.a('number');",
                  "    pm.expect(jsonData.totalBookings).to.be.a('number');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/admin/dashboard",
              "host": ["{{baseUrl}}"],
              "path": ["admin", "dashboard"]
            }
          },
          "response": []
        },
        {
          "name": "Get All Users",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has users data\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.users).to.be.an('array');",
                  "    pm.expect(jsonData.total).to.be.a('number');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/admin/users",
              "host": ["{{baseUrl}}"],
              "path": ["admin", "users"]
            }
          },
          "response": []
        },
        {
          "name": "Get All Hosts",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has hosts data\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.hosts).to.be.an('array');",
                  "    pm.expect(jsonData.total).to.be.a('number');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/admin/hosts",
              "host": ["{{baseUrl}}"],
              "path": ["admin", "hosts"]
            }
          },
          "response": []
        },
        {
          "name": "Verify Host",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Host is verified\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.isVerified).to.be.true;",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{}"
            },
            "url": {
              "raw": "{{baseUrl}}/admin/hosts/{{hostId}}/verify",
              "host": ["{{baseUrl}}"],
              "path": ["admin", "hosts", "{{hostId}}", "verify"]
            }
          },
          "response": []
        },
        {
          "name": "Get All Properties",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has properties data\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.properties).to.be.an('array');",
                  "    pm.expect(jsonData.total).to.be.a('number');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/admin/properties",
              "host": ["{{baseUrl}}"],
              "path": ["admin", "properties"]
            }
          },
          "response": []
        },
        {
          "name": "Toggle Property Status",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Property status is toggled\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.isActive).to.be.a('boolean');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{}"
            },
            "url": {
              "raw": "{{baseUrl}}/admin/properties/{{propertyId}}/status",
              "host": ["{{baseUrl}}"],
              "path": ["admin", "properties", "{{propertyId}}", "status"]
            }
          },
          "response": []
        },
        {
          "name": "Get All Bookings",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has bookings data\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.bookings).to.be.an('array');",
                  "    pm.expect(jsonData.total).to.be.a('number');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/admin/bookings",
              "host": ["{{baseUrl}}"],
              "path": ["admin", "bookings"]
            }
          },
          "response": []
        }
      ]
    }
  ]
}
